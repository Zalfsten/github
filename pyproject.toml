[project]
name = "dummy-python-app"
version = "0.1.0"
description = "A simple dummy Python application for Docker CI/CD testing"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "flask>=3.1.2",
]

[project.optional-dependencies]
test = [
    "pytest>=8.4.2",
    "pytest-cov>=7.0.0",
    "pytest-flask>=1.3.0",
]
dev = [
    "pytest>=8.4.2",
    "pytest-cov>=7.0.0",
    "pytest-flask>=1.3.0",
    "pylint>=3.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    "bandit>=1.7.5",
    "safety>=3.0.0",
]

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--tb=short",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-branch",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.black]
line-length = 88
target-version = ['py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["app"]

[tool.pylint.messages_control]
disable = [
    "missing-module-docstring",
    "missing-function-docstring",
    "missing-class-docstring",
    "line-too-long",  # handled by black
    "invalid-name",
]

[tool.pylint.format]
max-line-length = 88

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false  # Start lenient
ignore_missing_imports = true

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101", "B104"]  # Skip assert_used test and hardcoded_bind_all_interfaces

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "pre-commit>=4.3.0",
    "pytest>=8.4.2",
    "pytest-cov>=7.0.0",
    "pytest-flask>=1.3.0",
]
